VAGRANTFILE_API_VERSION = '2'

# max number of dse nodes this script will generate
MAX_DSE_NODES = 3

# Ubuntu 14.04 LTS
# http://cloud-images.ubuntu.com/locator/ec2/
# "trusty instance-store amd64 aki"
ami_list = {
    'ap-northeast-1' => 'ami-40e1e641',
    'ap-southeast-1' => 'ami-07597455',
    'ap-southeast-2' => 'ami-39086103',
    'eu-west-1' => 'ami-5a4bfb2d',
    'eu-central-1' => 'ami-d21223cf',
    'sa-east-1' => 'ami-798f3e64',
    'us-east-1' => 'ami-92f569fa',
    'us-west-1' => 'ami-71150534',
    'us-west-2' => 'ami-8b84d0bb'
}

required_envars = ['DATASTAX_USER', 'DATASTAX_PASS']
for envar in required_envars
    if !ENV[envar]
        print "\n$#{envar} must be set! \n"\
              "If performing a specific command, you must specify a "\
              "machine name. Example: \n"\
                "\t vagrant ssh demo \n"\
                "\t vagrant destroy demo \n\n"
        exit
    end
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    # disable default synced folder for all machines
    config.vm.synced_folder '.', '/vagrant', disabled: true

    # define the a single-machine developer setup
    config.vm.define 'singlenode', autostart: true do |singlenode|

        # define virtualbox machine
        singlenode.vm.provider :virtualbox do |vb, override|

            # sync this project folder to /cornerstone on the guest machine
            override.vm.synced_folder '.', '/cornerstone', create: true

            # sync this ./cache folder to /cache on the guest machine
            override.vm.synced_folder 'cache', '/cache', create: true

            # set the machine's image and network options
            override.vm.box = 'ubuntu/trusty64'
            override.vm.network :private_network, ip: '192.168.101.7'

            # set the machine's memory and cpu utilization
            vb.memory = 4096
            vb.cpus = 3

            override.vm.post_up_message = <<-eos
                Visit:
                    http://192.168.101.7:8080/Portfolio for the Investment Manager
            eos
        end

        singlenode.vm.provider :azure do |azure, override|
            override.vm.box = 'azure'

            azure.vm_size = 'ExtraLarge'
            azure.vm_location = 'West US'

            azure.mgmt_endpoint = 'https://management.core.windows.net'
            azure.mgmt_certificate = ENV['AZURE_MGMT_CERT_PEM']
            azure.subscription_id = ENV['AZURE_SUBSCRIPTION_ID']

            azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04_2_LTS-amd64-server-20150309-en-us-30GB'
            azure.vm_name = "investment-manager-#{ENV['DEMO_USER_WORD']}"

            azure.private_key_file = ENV['AZURE_PRIVATE_KEY']
            azure.certificate_file = ENV['AZURE_CERT']
            azure.vm_user = ENV['AZURE_SSH_USER']
            azure.vm_password = ENV['AZURE_SSH_PASS']
            override.ssh.username = ENV['AZURE_SSH_USER']
            override.ssh.password = ENV['AZURE_SSH_PASS']

            azure.ssh_port = '22'

            override.vm.post_up_message = <<-eos
                Visit:
                    http://<ip>:8080/Portfolio for the Investment Manager
            eos
        end

        # provision machine
        config.vm.provision :shell, path: 'vagrant/general/apt/install/git_v1.sh',
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/general/file/install/cornerstone_v1.sh',
                                    privileged: false

        config.vm.provision :shell, path: 'vagrant/general/apt/install/datastax-enterprise_v3.sh',
                                    args: ["--datastax-user", "#{ENV['DATASTAX_USER']}",
                                           "--datastax-pass", "#{ENV['DATASTAX_PASS']}"],
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/general/apt/install/datastax-opscenter_v3.sh',
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/datastax/investment-manager/2.install.sh',
                                    privileged: false

        config.vm.provision :shell, path: 'vagrant/datastax/investment-manager/install-dse-node0-cronjobs.sh',
                                    privileged: false

        config.vm.provision :shell, path: 'vagrant/general/apt/first-start/datastax/spark_v1.sh',
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/general/apt/first-start/datastax/opscenter_v1.sh',
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/datastax/investment-manager/3.start.sh',
                                    privileged: false

    end

    # define MAX_DSE_NODES dse machines
    (0..MAX_DSE_NODES).each do |i|
        config.vm.define "dse#{i}", autostart: false do |dse|

            # define virtualbox dse machines
            dse.vm.provider :virtualbox do |vb, override|

                # sync this ./cache folder to /cache on the guest machine
                override.vm.synced_folder 'cache', '/cache', create: true

                # set the machine's image and network options
                override.vm.box = 'ubuntu/trusty64'
                override.vm.network :private_network, ip: "192.168.101.#{i+10}"

                # set the machine's memory and cpu utilization
                vb.memory = 2048
                vb.cpus = 1
            end

            dse.vm.provider :aws do |aws, override|

                # set the machine's image and the default username for the machine
                override.vm.box = 'aws-dummy'
                override.ssh.username = 'ubuntu'

                # setup basic aws configurations
                aws.access_key_id = ENV['DEMO_AWS_ACCESS_KEY']
                aws.secret_access_key = ENV['DEMO_AWS_SECRET_KEY']
                aws.region = ENV['DEMO_AWS_REGION']
                aws.availability_zone = ENV['DEMO_AWS_AZ']
                aws.ami = ami_list[aws.region]
                aws.instance_type = 'm3.medium'

                # setup keypair configuration
                aws.keypair_name = ENV['DEMO_AWS_KEYPAIR_NAME']
                override.ssh.private_key_path = ENV['DEMO_AWS_KEYPAIR_LOCATION']

                # setup security groups
                aws.security_groups = [ENV['DEMO_AWS_SECURITY_GROUP']]

                # setup AWS Tags
                aws.tags = {
                    'Name' => 'vagrant',
                    'Owner' => ENV['DEMO_USER'],
                    'Email' => ENV['DEMO_EMAIL']
                }
            end
        end
    end

    config.vm.define "opscenter", autostart: false do |opscenter|
        # define virtualbox machine
        opscenter.vm.provider :virtualbox do |vb, override|

            # sync this ./cache folder to /cache on the guest machine
            override.vm.synced_folder 'cache', '/cache', create: true

            # set the machine's image and network options
            override.vm.box = 'ubuntu/trusty64'
            override.vm.network :private_network, ip: '192.168.101.8'

            # set the machine's memory and cpu utilization
            vb.memory = 768
            vb.cpus = 1

            override.vm.post_up_message = <<-eos
                Visit:
                    http://192.168.101.8:8888 for OpsCenter
            eos
        end
    end

    # define the demo machine
    config.vm.define 'demo', autostart: false do |demo|

        # define virtualbox machine
        demo.vm.provider :virtualbox do |vb, override|

            # sync this project folder to /cornerstone on the guest machine
            override.vm.synced_folder '.', '/cornerstone', create: true

            # sync this ./cache folder to /cache on the guest machine
            override.vm.synced_folder 'cache', '/cache', create: true

            # set the machine's image and network options
            override.vm.box = 'ubuntu/trusty64'
            override.vm.network :private_network, ip: '192.168.101.9'

            # set the machine's memory and cpu utilization
            vb.memory = 1024
            vb.cpus = 1
        end
    end
end
