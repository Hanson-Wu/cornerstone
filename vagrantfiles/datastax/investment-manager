VAGRANTFILE_API_VERSION = '2'

# max number of dse nodes this script will generate
MAX_DSE_NODES = 3

# Ubuntu 14.04 LTS
# http://cloud-images.ubuntu.com/locator/ec2/
# "trusty instance-store amd64 aki"
ami_list = {
    'ap-northeast-1' => 'ami-40e1e641',
    'ap-southeast-1' => 'ami-07597455',
    'ap-southeast-2' => 'ami-39086103',
    'eu-west-1' => 'ami-5a4bfb2d',
    'eu-central-1' => 'ami-d21223cf',
    'sa-east-1' => 'ami-798f3e64',
    'us-east-1' => 'ami-92f569fa',
    'us-west-1' => 'ami-71150534',
    'us-west-2' => 'ami-8b84d0bb'
}

required_envars = ['DATASTAX_USER', 'DATASTAX_PASS']
for envar in required_envars
    if !ENV[envar]
        print "\n$#{envar} must be set! \n"\
              "If performing a specific command, you must specify a "\
              "machine name. Example: \n"\
                "\t vagrant ssh demo \n"\
                "\t vagrant destroy demo \n\n"
        exit
    end
end

vb_setup = Proc.new do |vb, override|
    override.vm.synced_folder '.', '/cornerstone', create: true

    override.vm.synced_folder 'cache', '/cache', create: true

    override.vm.box = 'ubuntu/trusty64'

    vb.memory = 4096
    vb.cpus = 3
end

azure_setup = Proc.new do |azure, override|
    override.vm.box = 'azure'

    azure.vm_size = 'ExtraLarge'
    azure.vm_location = 'West US'

    azure.mgmt_endpoint = 'https://management.core.windows.net'
    azure.mgmt_certificate = ENV['AZURE_MGMT_CERT_PEM']
    azure.subscription_id = ENV['AZURE_SUBSCRIPTION_ID']

    azure.vm_image = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04_2_LTS-amd64-server-20150309-en-us-30GB'
    azure.vm_name = "investment-manager-#{ENV['DEMO_USER_WORD']}"

    azure.private_key_file = ENV['AZURE_PRIVATE_KEY']
    azure.certificate_file = ENV['AZURE_CERT']
    azure.vm_user = ENV['AZURE_SSH_USER']
    azure.vm_password = ENV['AZURE_SSH_PASS']
    override.ssh.username = ENV['AZURE_SSH_USER']
    override.ssh.password = ENV['AZURE_SSH_PASS']

    azure.ssh_port = '22'
end

aws_setup = Proc.new do |aws, override|
    override.vm.box = 'aws-dummy'
    override.ssh.username = 'ubuntu'

    aws.access_key_id = ENV['DEMO_AWS_ACCESS_KEY']
    aws.secret_access_key = ENV['DEMO_AWS_SECRET_KEY']
    aws.region = ENV['DEMO_AWS_REGION']
    aws.availability_zone = ENV['DEMO_AWS_AZ']
    aws.ami = ami_list[aws.region]
    aws.instance_type = 'm3.medium'

    aws.keypair_name = ENV['DEMO_AWS_KEYPAIR_NAME']
    override.ssh.private_key_path = ENV['DEMO_AWS_KEYPAIR_LOCATION']

    aws.security_groups = [ENV['DEMO_AWS_SECURITY_GROUP']]

    aws.tags = {
        'Name' => 'vagrant',
        'Owner' => ENV['DEMO_USER'],
        'Email' => ENV['DEMO_EMAIL']
    }
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    # disable default synced folder for all machines
    config.vm.synced_folder '.', '/vagrant', disabled: true

    # define the a single-machine developer setup
    config.vm.define 'singlenode', autostart: true do |singlenode|

        # define virtualbox machine
        singlenode.vm.provider :virtualbox do |vb, override|
            override.vm.network :private_network, ip: '192.168.101.7'

            override.vm.post_up_message = <<-eos
                Visit:
                    http://192.168.101.7:8080/Portfolio for the Investment Manager
            eos

            vb_setup.call vb, override
        end

        singlenode.vm.provider :azure do |azure, override|
            azure.tcp_endpoints = '22,8080'

            override.vm.post_up_message = <<-eos
                Visit:
                    http://<host>:8080/Portfolio for the Investment Manager

                Use the following command to find <host>:
                    vagrant ssh-config singlenode | grep HostName
            eos

            azure_setup.call azure, override
        end

        singlenode.vm.provider :aws do |aws, override|
            aws_setup.call aws, override
        end

        config.vm.provision :shell, path: 'vagrant/general/apt/install/git_v1.sh',
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/general/file/install/cornerstone_v1.sh',
                                    privileged: false

        config.vm.provision :shell, path: 'vagrant/general/apt/install/datastax-enterprise_v3.sh',
                                    args: ["--datastax-user", "#{ENV['DATASTAX_USER']}",
                                           "--datastax-pass", "#{ENV['DATASTAX_PASS']}"],
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/general/apt/install/datastax-opscenter_v3.sh',
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/datastax/investment-manager/2.install.sh',
                                    privileged: false

        config.vm.provision :shell, path: 'vagrant/datastax/investment-manager/install-dse-node0-cronjobs.sh',
                                    privileged: false

        config.vm.provision :shell, path: 'vagrant/general/apt/first-start/datastax/spark_v1.sh',
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/general/apt/first-start/datastax/opscenter_v1.sh',
                                    privileged: false
        config.vm.provision :shell, path: 'vagrant/datastax/investment-manager/3.start.sh',
                                    privileged: false

    end

    (0..MAX_DSE_NODES).each do |i|

        config.vm.define "dse#{i}", autostart: false do |dse|

            dse.vm.provider :virtualbox do |vb, override|
                vb.memory = 2048
                vb.cpus = 1

                override.vm.network :private_network, ip: "192.168.101.#{i+10}"

                vb_setup.call vb, override
            end
        end
    end

    config.vm.define "opscenter", autostart: false do |opscenter|

        opscenter.vm.provider :virtualbox do |vb, override|
            vb.memory = 768
            vb.cpus = 1

            override.vm.network :private_network, ip: '192.168.101.8'

            override.vm.post_up_message = <<-eos
                Visit:
                    http://192.168.101.8:8888 for OpsCenter
            eos

            vb_setup.call vb, override
        end
    end

    config.vm.define 'demo', autostart: false do |demo|

        demo.vm.provider :virtualbox do |vb, override|
            vb.memory = 1024
            vb.cpus = 1

            override.vm.network :private_network, ip: '192.168.101.9'

            vb_setup.call vb, override
        end
    end
end
